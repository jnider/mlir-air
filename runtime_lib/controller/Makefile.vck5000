# Copyright (C) 2022, Xilinx Inc.
# Copyright (C) 2022, Advanced Micro Devices, Inc.
# SPDX-License-Identifier: MIT

ifdef CHATTY
chatty := -DCHATTY=1
else
chatty := -DCHATTY=0
endif

LD_SRCS += \
vck5000.ld

OBJS += \
./$(OUTPUT)/asm_vectors.o \
./$(OUTPUT)/aie.o \
./$(OUTPUT)/boot.o \
./$(OUTPUT)/cdma.o \
./$(OUTPUT)/glue.o \
./$(OUTPUT)/hsa.o \
./$(OUTPUT)/hsa_csr.o \
./$(OUTPUT)/interrupt.o \
./$(OUTPUT)/main.o \
./$(OUTPUT)/memory.o \
./$(OUTPUT)/platform.o \
./$(OUTPUT)/printf.o \
./$(OUTPUT)/shell.o \
./$(OUTPUT)/uart.o \

CC=aarch64-none-elf-gcc
CFLAGS := -Wall -O2 -g3 -c -fmessage-length=0 -mcpu=cortex-a72 -DARM_CONTROLLER $(chatty)
CXX=aarch64-none-elf-g++
CXXFLAGS := -Wall -O2 -g3 -c -fmessage-length=0 -mcpu=cortex-a72 -DARM_CONTROLLER $(chatty)
LIBS := -Wl,--start-group,-lgcc,-lc,-lstdc++,--end-group
OUTPUT := vck5000_obj

INCLUDES += -I../airhost/include -Ibp/include -I$(ROCM_ROOT)/include

all: dirs vck5000.elf secondary-outputs

# Each subdirectory must supply rules for building sources it contributes
$(OUTPUT)/%.o: %.c
	@echo 'Building file: $<'
	@echo 'Invoking: ARM v8 c compiler'
	$(CC) $(CFLAGS) $(INCLUDES) -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -o "$@" "$<"
	@echo 'Finished building: $<'
	@echo ' '

$(OUTPUT)/%.o: %.cpp
	@echo 'Building file: $<'
	@echo 'Invoking: ARM v8 g++ compiler'
	$(CXX) $(CXXFLAGS) $(INCLUDES) -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -o "$@" "$<"
	@echo 'Finished building: $<'
	@echo ' '

$(OUTPUT)/%.o: %.S
	@echo 'Building file: $<'
	@echo 'Invoking: ARM v8 assembler'
	$(CXX) $(CXXFLAGS) $(INCLUDES) -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -o "$@" "$<"
	@echo 'Finished building: $<'
	@echo ' '

# Add inputs and outputs from these tool invocations to the build variables
ELFSIZE += \
vck5000.elf.size \

# create output directory for .o and .d files
dirs:
	mkdir -p $(OUTPUT)

# Tool invocations
vck5000.elf: $(OBJS) vck5000.ld
	@echo 'Building target: $@'
	@echo 'Invoking: ARM v8 g++ linker'
	$(CXX) -mcpu=cortex-a72 -Wl,-T -Wl,vck5000.ld $(LIBS) $(OBJS) -o $@
	@echo 'Finished building target: $@'
	@echo ' '

vck5000.elf.size: vck5000.elf
	@echo 'Invoking: ARM v8 Print Size'
	aarch64-none-elf-size vck5000.elf  |tee "$@"
	@echo 'Finished building: $@'
	@echo ' '

RM := rm -rf

# Other Targets
clean:
	-$(RM) $(OBJS) $(ELFSIZE) $(OUTPUT) vck5000.elf
	-@echo ' '

secondary-outputs: $(ELFSIZE)

.PHONY: all clean
